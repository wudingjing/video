<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qf.dao.SubjectMapper">
    <resultMap id="BaseResultMap" type="com.qf.pojo.Subject">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="subject_name" property="subjectName" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="subjectMap" type="com.qf.pojo.Subject" >
        <id column="subid" property="id" jdbcType="INTEGER" />
        <result column="subject_name" property="subjectName" jdbcType="VARCHAR" />

        <collection property="courseList" ofType="com.qf.pojo.Course">
            <id column="couid" property="id"/>
            <result column="course_title" property="courseTitle"/>
            <result column="course_desc" property="courseDesc"/>

            <collection property="videoList" ofType="com.qf.pojo.Video">
                <id column="vidid" property="id"/>
                <result column="title" property="title"/>
                <result column="detail" property="detail"/>
                <result column="time" property="time"/>
                <result column="video_url" property="videoUrl"/>
                <result column="image_url" property="imageUrl"/>
                <result column="play_num" property="playNum"/>
            </collection>
        </collection>

    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, subject_name
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qf.pojo.SubjectExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from subject
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from subject
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from subject
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.qf.pojo.SubjectExample">
        delete from subject
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.qf.pojo.Subject">
    insert into subject (id, subject_name)
    values (#{id,jdbcType=INTEGER}, #{subjectName,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.qf.pojo.Subject">
        insert into subject
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="subjectName != null">
                subject_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="subjectName != null">
                #{subjectName,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.qf.pojo.SubjectExample" resultType="java.lang.Integer">
        select count(*) from subject
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update subject
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.subjectName != null">
                subject_name = #{record.subjectName,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update subject
        set id = #{record.id,jdbcType=INTEGER},
        subject_name = #{record.subjectName,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.qf.pojo.Subject">
        update subject
        <set>
            <if test="subjectName != null">
                subject_name = #{subjectName,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.qf.pojo.Subject">
    update subject
    set subject_name = #{subjectName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="findBySubjectId" resultMap="subjectMap">
      select `subject`.id subid, subject_name,
                course_title, course_desc, course.id couid,
                video.id vidid, title, detail, time, video_url, image_url, play_num
      from course,`subject`,video
      where course.subject_id=`subject`.id
      and video.course_id=course.id
      and `subject`.id=#{subId}
  </select>
</mapper>